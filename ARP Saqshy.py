import os
import time
import platform
import re
from plyer import notification  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

SCAN_INTERVAL = 10
arp_table = {}

def get_arp_table():
    """–°–æ–±–∏—Ä–∞–µ—Ç ARP-—Ç–∞–±–ª–∏—Ü—É —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É arp -a (–¥–ª—è Windows)"""
    print("[üîç] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ARP-—Ç–∞–±–ª–∏—Ü—ã...")

    output = os.popen("arp -a").read()
    matches = re.findall(r"(\d+\.\d+\.\d+\.\d+)\s+([0-9A-Fa-f:-]+)", output)

    new_table = {ip: mac for ip, mac in matches}

    if not new_table:
        print("    ‚ùå ARP-—Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞! –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ç–∏.")

    print("[‚Ñπ] –¢–µ–∫—É—â–∞—è ARP-—Ç–∞–±–ª–∏—Ü–∞:")
    for ip, mac in new_table.items():
        print(f"    {ip} ‚Üí {mac}")

    return new_table

def notify(title, message):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    notification.notify(
        title=title,
        message=message,
        app_name="ARP-Detector",
        timeout=5  # –í—Ä–µ–º—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (—Å–µ–∫—É–Ω–¥—ã)
    )

def detect_arp_spoofing():
    """–û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ ARP-spoofing"""
    global arp_table
    new_arp_table = get_arp_table()

    for ip, mac in new_arp_table.items():
        if ip in arp_table and arp_table[ip] != mac:
            alert_msg = f"[‚ö†] –û–±–Ω–∞—Ä—É–∂–µ–Ω ARP-spoof–∏–Ω–≥!\n{ip} ‚Üí {mac} (–ë—ã–ª–æ: {arp_table[ip]})"
            print(alert_msg)
            notify("‚ö† ARP-spoofing –æ–±–Ω–∞—Ä—É–∂–µ–Ω!", f"IP: {ip}\n–ù–æ–≤—ã–π MAC: {mac}\n–°—Ç–∞—Ä—ã–π MAC: {arp_table[ip]}")

    arp_table = new_arp_table

if __name__ == "__main__":
    print("[üîç] –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ ARP-—Ç–∞–±–ª–∏—Ü—ã...")
    while True:
        detect_arp_spoofing()
        time.sleep(SCAN_INTERVAL)
